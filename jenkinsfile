pipeline {
  agent {
    node {
      label 'maven-slave'
    }
  }
  stages {
    stage('Maven Build') {
      steps {
        checkout([
		$class: 'GitSCM', 
		branches: [[name: '*/master']], 
		extensions: [], 
		userRemoteConfigs: [[url: 'https://github.com/mohitknamdeo/DevOpsDemo.git']]
		])
        sh 'mvn clean install'
      }
    }
    stage('Quality Check of codes with SonarQube') {
      steps {
      	withSonarQubeEnv('sonar') { 
	  sh "mvn sonar:sonar"
	}
      }
    }
    stage('Push the Artifact into Nexus') {
      steps {
      	nexusArtifactUploader artifacts: [
			[
				artifactId: 'DevOpsDemo', 
				classifier: '', 
				file: 'target/DevOpsDemo.war', 
				type: 'war'
			]
	], 
	credentialsId: 'nexusauth', 
	groupId: 'com.blazeclan', 
	nexusUrl: 'http://13.126.20.121:8081', 
	nexusVersion: 'nexus3', 
	protocol: 'http', 
	repository: 'maven-central', 
	version: '${BUILD_NUMBER}'
      }
    }
    stage('Pull the Artifact from Nexus and Deploy on Production') {
      agent any
      steps {
      	sh 'curl -X GET http://admin:admin@nexus:8081/nexus/service/local/repositories/maven-central/content/com/blazeclan/DevOpsDemo/${BUILD_NUMBER}/DevOpsDemo-${BUILD_NUMBER}.war -o DevOpsDemo-${BUILD_NUMBER}.war'
	deploy adapters: [
		tomcat9(credentialsId: 'tomcat-cred', 
		path: '', 
		url: 'http://tomcat:9090')
	], 
	contextPath: 'DevOpsDemo-App', 
	war: '**/*.war'
      }
    }
  }
  /*post {
    always{
      slackSend channel: '#alert', color: 'good', message: 'Build is in progress', teamDomain: 'jenkins-trainingtalk', tokenCredentialId: 'slack-notifier'
	deleteDir()
      }
   }*/
}
